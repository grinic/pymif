pymif.microscope_manager.viventis_manager
=========================================

.. py:module:: pymif.microscope_manager.viventis_manager


Classes
-------

.. autoapisummary::

   pymif.microscope_manager.viventis_manager.ViventisManager


Module Contents
---------------

.. py:class:: ViventisManager(path: str, chunks: Tuple[int, Ellipsis] = (1, 1, 8, 4096, 4096))

   Bases: :py:obj:`pymif.microscope_manager.microscope_manager.MicroscopeManager`


   Reader for Viventis microscope datasets with OME-TIFF and companion .ome XML files.

   This class lazily loads data into a dask array and parses associated OME-XML metadata.


   .. py:attribute:: path


   .. py:attribute:: chunks
      :value: (1, 1, 8, 4096, 4096)



   .. py:method:: _parse_companion_file() -> Dict[str, Any]

      Parse the companion `.ome` XML metadata file.

      Returns
      -------
      Dict[str, Any]
          Dictionary containing extracted metadata such as size, scales, units, channel info,
          time increment, and TIFF file mapping.



   .. py:method:: _build_dask_array() -> List[dask.array.Array]

      Lazily construct a dask array for the image data using tifffile and delayed loading.

      Returns
      -------
      List[da.Array]
          A list containing a single Dask array representing the full dataset (level 0).



   .. py:method:: read() -> Tuple[List[dask.array.Array], Dict[str, Any]]

      Read the Viventis dataset and populate self.data and self.metadata.

      Returns
      -------
      Tuple[List[da.Array], Dict[str, Any]]
          A tuple containing:
          - A list with one dask array representing the image data.
          - A metadata dictionary with pixel sizes, units, axes, etc.



